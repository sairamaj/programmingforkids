@page "/git"
@using Web.Shared.Model
@inject HttpClient Http

<PageTitle>@Name</PageTitle>
@if (resources == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<MatAccordion Multi="true">
		@foreach (var resource in resources.OrderBy(r => r.Order))
		{
			<MatExpansionPanel>
				<MatExpansionPanelSummary>
					<MatExpansionPanelHeader>@resource.Title</MatExpansionPanelHeader>
				</MatExpansionPanelSummary>
				<MatExpansionPanelDetails>
					<p>@((MarkupString) @resource.InfoAsMarkdown)</p>
				</MatExpansionPanelDetails>
			</MatExpansionPanel>
		}
	</MatAccordion>
}
@code {
	[Parameter]
	public string Name { get; set; }
	IEnumerable<Resource> resources;

	
	protected override async Task OnInitializedAsync()
	{
		Name = "Git";
		resources = await Http.GetFromJsonAsync<IEnumerable<Resource>>($"home/resources/{Name}");
	}
}